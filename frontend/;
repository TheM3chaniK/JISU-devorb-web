"use client";
import { useState, useEffect } from "react";
import DSCSubmissions from "../components/DSCSubmissions";
import AssignedScholarsTable from "./AsignScholarTable";

// Define types for our data models
interface ProgressReport {
  id: number;
  title: string;
  status: string;
  date: string;
  document: string;
}

interface ResearchSubmission {
  id: string;
  title: string;
  status: string;
  date: string;
  document: string;
}

interface DSCMember {
  id: number;
  name: string;
  designation: string;
  department: string;
  email: string;
}

interface Form {
  id: number;
  title: string;
  category: string;
  status: string;
  submittedDate: string;
  document: string;
}

interface Scholar {
  id: number;
  name: string;
  department: string;
  enrollmentNo: string;
  researchTopic: string;
  status: string;
  supervisor: { name: string; email: string };
  coSupervisor: { name: string; email: string };
  dscMembers: DSCMember[];
  progressReports: ProgressReport[];
  researchSubmissions: ResearchSubmission[];
  forms: Form[];
}

// Mock data for assigned scholars
const mockScholars: Scholar[] = [
  {
    id: 1,
    name: "Rahul Sharma",
    department: "Computer Science",
    enrollmentNo: "PHD-CS-2023-001",
    researchTopic: "Machine Learning for Cybersecurity Threat Detection",
    status: "Progress Report 3 Pending",
    supervisor: {
      name: "Dr. Rajesh Gupta",
      email: "rajesh.gupta@jisuniversity.ac.in",
    },
    coSupervisor: {
      name: "Dr. Preeti Mishra",
      email: "preeti.mishra@jisuniversity.ac.in",
    },
    dscMembers: [
      {
        id: 1,
        name: "Dr. Anil Kumar",
        designation: "Professor",
        department: "Computer Science",
        email: "anil.kumar@jisuniversity.ac.in",
      },
      {
        id: 2,
        name: "Dr. Sneha Patel",
        designation: "Associate Professor",
        department: "Information Technology",
        email: "sneha.patel@jisuniversity.ac.in",
      },
      {
        id: 3,
        name: "Dr. Vikram Singh",
        designation: "Professor",
        department: "Mathematics",
        email: "vikram.singh@jisuniversity.ac.in",
      },
    ],
    progressReports: [
      {
        id: 1,
        title: "Progress Report 1",
        status: "Approved",
        date: "15 Jan 2025",
        document: "report_1.pdf",
      },
      {
        id: 2,
        title: "Progress Report 2",
        status: "Approved",
        date: "20 Mar 2025",
        document: "report_2.pdf",
      },
      {
        id: 3,
        title: "Progress Report 3",
        status: "Pending Review",
        date: "12 May 2025",
        document: "report_3.pdf",
      },
      {
        id: 4,
        title: "Progress Report 4",
        status: "Not Submitted",
        date: "",
        document: "",
      },
      {
        id: 5,
        title: "Progress Report 5",
        status: "Not Submitted",
        date: "",
        document: "",
      },
      {
        id: 6,
        title: "Progress Report 6",
        status: "Not Submitted",
        date: "",
        document: "",
      },
    ],
    researchSubmissions: [
      {
        id: "rp",
        title: "Research Proposal",
        status: "Approved",
        date: "10 Oct 2024",
        document: "research_proposal.pdf",
      },
      {
        id: "pts",
        title: "Pre-Thesis Submission",
        status: "Not Submitted",
        date: "",
        document: "",
      },
      {
        id: "fts",
        title: "Final Thesis Submission",
        status: "Not Submitted",
        date: "",
        document: "",
      },
    ],
    forms: [
      {
        id: 1,
        title: "Registration Form",
        category: "Enrollment",
        status: "Approved",
        submittedDate: "05 Sep 2024",
        document: "registration.pdf",
      },
      {
        id: 2,
        title: "Supervisor Nomination",
        category: "Committee",
        status: "Approved",
        submittedDate: "20 Sep 2024",
        document: "supervisor_nomination.pdf",
      },
      {
        id: 3,
        title: "Course Registration",
        category: "Coursework",
        status: "Approved",
        submittedDate: "25 Sep 2024",
        document: "course_registration.pdf",
      },
      {
        id: 4,
        title: "DSC Formation Request",
        category: "Committee",
        status: "Approved",
        submittedDate: "01 Oct 2024",
        document: "dsc_formation.pdf",
      },
      {
        id: 5,
        title: "Coursework Completion",
        category: "Coursework",
        status: "Pending Review",
        submittedDate: "05 May 2025",
        document: "coursework_completion.pdf",
      },
    ],
  },
  {
    id: 2,
    name: "Priya Patel",
    department: "Electrical Engineering",
    enrollmentNo: "PHD-EE-2023-005",
    researchTopic: "Smart Grid Optimization using AI Techniques",
    status: "Pre-submission Stage",
    supervisor: {
      name: "Dr. Rajesh Gupta",
      email: "rajesh.gupta@jisuniversity.ac.in",
    },
    coSupervisor: {
      name: "Dr. Harish Mehta",
      email: "harish.mehta@jisuniversity.ac.in",
    },
    dscMembers: [
      {
        id: 1,
        name: "Dr. Lakshmi Narayan",
        designation: "Professor",
        department: "Electrical Engineering",
        email: "lakshmi.narayan@jisuniversity.ac.in",
      },
      {
        id: 2,
        name: "Dr. Amit Joshi",
        designation: "Professor",
        department: "Electronics",
        email: "amit.joshi@jisuniversity.ac.in",
      },
      {
        id: 3,
        name: "Dr. Sunita Sharma",
        designation: "Associate Professor",
        department: "Computer Science",
        email: "sunita.sharma@jisuniversity.ac.in",
      },
    ],
    progressReports: [
      {
        id: 1,
        title: "Progress Report 1",
        status: "Approved",
        date: "10 Jan 2025",
        document: "report_1.pdf",
      },
      {
        id: 2,
        title: "Progress Report 2",
        status: "Approved",
        date: "05 Mar 2025",
        document: "report_2.pdf",
      },
      {
        id: 3,
        title: "Progress Report 3",
        status: "Approved",
        date: "08 May 2025",
        document: "report_3.pdf",
      },
      {
        id: 4,
        title: "Progress Report 4",
        status: "Approved",
        date: "12 Jul 2025",
        document: "report_4.pdf",
      },
      {
        id: 5,
        title: "Progress Report 5",
        status: "Approved",
        date: "18 Sep 2025",
        document: "report_5.pdf",
      },
      {
        id: 6,
        title: "Progress Report 6",
        status: "Approved",
        date: "22 Nov 2025",
        document: "report_6.pdf",
      },
    ],
    researchSubmissions: [
      {
        id: "rp",
        title: "Research Proposal",
        status: "Approved",
        date: "15 Sep 2024",
        document: "research_proposal.pdf",
      },
      {
        id: "pts",
        title: "Pre-Thesis Submission",
        status: "Pending Review",
        date: "01 May 2025",
        document: "pre_thesis_submission.pdf",
      },
      {
        id: "fts",
        title: "Final Thesis Submission",
        status: "Not Submitted",
        date: "",
        document: "",
      },
    ],
    forms: [
      {
        id: 1,
        title: "Registration Form",
        category: "Enrollment",
        status: "Approved",
        submittedDate: "01 Sep 2024",
        document: "registration.pdf",
      },
      {
        id: 2,
        title: "Supervisor Nomination",
        category: "Committee",
        status: "Approved",
        submittedDate: "15 Sep 2024",
        document: "supervisor_nomination.pdf",
      },
      {
        id: 3,
        title: "Course Registration",
        category: "Coursework",
        status: "Approved",
        submittedDate: "20 Sep 2024",
        document: "course_registration.pdf",
      },
      {
        id: 4,
        title: "DSC Formation Request",
        category: "Committee",
        status: "Approved",
        submittedDate: "25 Sep 2024",
        document: "dsc_formation.pdf",
      },
      {
        id: 5,
        title: "Coursework Completion",
        category: "Coursework",
        status: "Approved",
        submittedDate: "15 Jan 2025",
        document: "coursework_completion.pdf",
      },
      {
        id: 6,
        title: "Synopsis Presentation Request",
        category: "Committee",
        status: "Approved",
        submittedDate: "20 Apr 2025",
        document: "synopsis_request.pdf",
      },
    ],
  },
  {
    id: 3,
    name: "Amit Kumar",
    department: "Mathematics",
    enrollmentNo: "PHD-MTH-2024-003",
    researchTopic:
      "Computational Methods for Fractional Differential Equations",
    status: "Research Proposal Pending",
    supervisor: {
      name: "Dr. Rajesh Gupta",
      email: "rajesh.gupta@jisuniversity.ac.in",
    },
    coSupervisor: {
      name: "Dr. Neha Agarwal",
      email: "neha.agarwal@jisuniversity.ac.in",
    },
    dscMembers: [
      {
        id: 1,
        name: "Dr. Rajiv Sharma",
        designation: "Professor",
        department: "Mathematics",
        email: "rajiv.sharma@jisuniversity.ac.in",
      },
      {
        id: 2,
        name: "Dr. Meera Iyer",
        designation: "Associate Professor",
        department: "Physics",
        email: "meera.iyer@jisuniversity.ac.in",
      },
      {
        id: 3,
        name: "Dr. Prakash Verma",
        designation: "Professor",
        department: "Statistics",
        email: "prakash.verma@jisuniversity.ac.in",
      },
    ],
    progressReports: [
      {
        id: 1,
        title: "Progress Report 1",
        status: "Not Submitted",
        date: "",
        document: "",
      },
      {
        id: 2,
        title: "Progress Report 2",
        status: "Not Submitted",
        date: "",
        document: "",
      },
      {
        id: 3,
        title: "Progress Report 3",
        status: "Not Submitted",
        date: "",
        document: "",
      },
      {
        id: 4,
        title: "Progress Report 4",
        status: "Not Submitted",
        date: "",
        document: "",
      },
      {
        id: 5,
        title: "Progress Report 5",
        status: "Not Submitted",
        date: "",
        document: "",
      },
      {
        id: 6,
        title: "Progress Report 6",
        status: "Not Submitted",
        date: "",
        document: "",
      },
    ],
    researchSubmissions: [
      {
        id: "rp",
        title: "Research Proposal",
        status: "Pending Review",
        date: "05 May 2025",
        document: "research_proposal.pdf",
      },
      {
        id: "pts",
        title: "Pre-Thesis Submission",
        status: "Not Submitted",
        date: "",
        document: "",
      },
      {
        id: "fts",
        title: "Final Thesis Submission",
        status: "Not Submitted",
        date: "",
        document: "",
      },
    ],
    forms: [
      {
        id: 1,
        title: "Registration Form",
        category: "Enrollment",
        status: "Approved",
        submittedDate: "10 Apr 2025",
        document: "registration.pdf",
      },
      {
        id: 2,
        title: "Supervisor Nomination",
        category: "Committee",
        status: "Approved",
        submittedDate: "20 Apr 2025",
        document: "supervisor_nomination.pdf",
      },
      {
        id: 3,
        title: "Course Registration",
        category: "Coursework",
        status: "Pending Review",
        submittedDate: "01 May 2025",
        document: "course_registration.pdf",
      },
      {
        id: 4,
        title: "DSC Formation Request",
        category: "Committee",
        status: "Pending Review",
        submittedDate: "05 May 2025",
        document: "dsc_formation.pdf",
      },
    ],
  },
];

export default function SupervisorDashboard() {
  const [mounted, setMounted] = useState(false);
  const [selectedScholar, setSelectedScholar] = useState<Scholar | null>(null);
  const [activeTab, setActiveTab] = useState("overview");
  const [showModal, setShowModal] = useState(false);
  const [modalContent, setModalContent] = useState({
    title: "",
    document: "",
    type: "",
    id: 0,
    action: "",
  });
  const [remark, setRemark] = useState("");

  useEffect(() => {
    setMounted(true);
  }, []);

  if (!mounted) return null;

  const handleScholarSelect = (scholar: Scholar) => {
    setSelectedScholar(scholar);
    setActiveTab("overview");
  };

  const handleBackToList = () => {
    setSelectedScholar(null);
  };

  const handleOpenModal = (
    title: string,
    document: string,
    type: string,
    id: number,
    action: string,
  ) => {
    setModalContent({ title, document, type, id, action });
    setShowModal(true);
  };

  const handleCloseModal = () => {
    setShowModal(false);
    setRemark("");
  };

  const handleAction = () => {
    // Here we would implement the actual approval/disapproval logic
    // For now, we just close the modal
    handleCloseModal();
  };

  const renderScholarTable = () => <AssignedScholarsTable />;

  const renderScholarDetails = () => {
    if (!selectedScholar) return null;

    const renderTabs = () => (
      <div className="flex border-b mb-4">
        <button
          onClick={() => setActiveTab("overview")}
          className={`px-4 py-2 font-medium ${activeTab === "overview" ? "text-emerald-600 border-b-2 border-emerald-600" : "text-gray-500 hover:text-gray-700"}`}
        >
          Overview
        </button>
        <button
          onClick={() => setActiveTab("submissions")}
          className={`px-4 py-2 font-medium ${activeTab === "submissions" ? "text-emerald-600 border-b-2 border-emerald-600" : "text-gray-500 hover:text-gray-700"}`}
        >
          Submissions
        </button>
        <button
          onClick={() => setActiveTab("forms")}
          className={`px-4 py-2 font-medium ${activeTab === "forms" ? "text-emerald-600 border-b-2 border-emerald-600" : "text-gray-500 hover:text-gray-700"}`}
        >
          Forms
        </button>
      </div>
    );

    const renderOverview = () => (
      <div className="space-y-6">
        <div className="bg-emerald-50 border border-emerald-100 rounded-lg p-4">
          <h4 className="text-lg font-semibold text-gray-800 mb-3">
            Scholar Information
          </h4>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <p className="text-sm text-gray-500">Name</p>
              <p className="font-medium text-black">{selectedScholar.name}</p>
            </div>
            <div>
              <p className="text-sm text-gray-500">Department</p>
              <p className="font-medium text-black">
                {selectedScholar.department}
              </p>
            </div>
            <div>
              <p className="text-sm text-gray-500">Enrollment Number</p>
              <p className="font-medium text-black">
                {selectedScholar.enrollmentNo}
              </p>
            </div>
            <div>
              <p className="text-sm text-gray-500">Current Status</p>
              <p className="font-medium text-black">{selectedScholar.status}</p>
            </div>
            <div className="md:col-span-2">
              <p className="text-sm text-gray-500">Research Topic</p>
              <p className="font-medium text-black">
                {selectedScholar.researchTopic}
              </p>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-white border border-gray-200 rounded-lg p-4">
            <h4 className="text-md font-semibold text-gray-800 mb-3">
              Supervisor Information
            </h4>
            <div>
              <p className="text-sm text-gray-500">Name</p>
              <p className="font-medium text-black">
                {selectedScholar.supervisor.name}
              </p>
            </div>
            <div className="mt-2">
              <p className="text-sm text-gray-500">Email</p>
              <p className="font-medium text-black">
                {selectedScholar.supervisor.email}
              </p>
            </div>
          </div>

          <div className="bg-white border border-gray-200 rounded-lg p-4">
            <h4 className="text-md font-semibold text-gray-800 mb-3">
              Co-Supervisor Information
            </h4>
            <div>
              <p className="text-sm text-gray-500">Name</p>
              <p className="font-medium text-black">
                {selectedScholar.coSupervisor.name}
              </p>
            </div>
            <div className="mt-2">
              <p className="text-sm text-gray-500">Email</p>
              <p className="font-medium text-black">
                {selectedScholar.coSupervisor.email}
              </p>
            </div>
          </div>
        </div>

        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <h4 className="text-md font-semibold text-gray-800 mb-3">
            Doctoral Scrutiny Committee (DSC)
          </h4>
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Name
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Designation
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Department
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Email
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {selectedScholar.dscMembers.map((member) => (
                  <tr key={member.id} className="hover:bg-gray-50">
                    <td className="px-4 py-3 whitespace-nowrap">
                      <div className="font-medium text-gray-900">
                        {member.name}
                      </div>
                    </td>
                    <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                      {member.designation}
                    </td>
                    <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                      {member.department}
                    </td>
                    <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                      {member.email}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    );

    const renderSubmissions = () => (
      <div className="space-y-6">
        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <h4 className="text-md font-semibold text-gray-800 mb-3">
            Research Proposal
          </h4>
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Title
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Status
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Submission Date
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Actions
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {selectedScholar.researchSubmissions
                  .filter((submission) => submission.id === "rp")
                  .map((submission) => (
                    <tr key={submission.id} className="hover:bg-gray-50">
                      <td className="px-4 py-3 whitespace-nowrap">
                        <div className="font-medium text-gray-900">
                          {submission.title}
                        </div>
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap">
                        <span
                          className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                            submission.status === "Approved"
                              ? "bg-green-100 text-green-800"
                              : submission.status === "Pending Review"
                                ? "bg-yellow-100 text-yellow-800"
                                : "bg-gray-100 text-gray-800"
                          }`}
                        >
                          {submission.status}
                        </span>
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                        {submission.date || "N/A"}
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                        {submission.status !== "Not Submitted" && (
                          <div className="flex space-x-2">
                            <button
                              className="text-blue-600 hover:text-blue-900"
                              onClick={() =>
                                handleOpenModal(
                                  submission.title,
                                  submission.document,
                                  "research",
                                  0,
                                  "view",
                                )
                              }
                            >
                              View
                            </button>
                            {submission.status === "Pending Review" && (
                              <>
                                <button
                                  className="text-green-600 hover:text-green-900"
                                  onClick={() =>
                                    handleOpenModal(
                                      submission.title,
                                      submission.document,
                                      "research",
                                      0,
                                      "approve",
                                    )
                                  }
                                >
                                  Approve
                                </button>
                                <button
                                  className="text-red-600 hover:text-red-900"
                                  onClick={() =>
                                    handleOpenModal(
                                      submission.title,
                                      submission.document,
                                      "research",
                                      0,
                                      "disapprove",
                                    )
                                  }
                                >
                                  Disapprove
                                </button>
                              </>
                            )}
                          </div>
                        )}
                      </td>
                    </tr>
                  ))}
              </tbody>
            </table>
          </div>
        </div>

        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <h4 className="text-md font-semibold text-gray-800 mb-3">
            Progress Reports
          </h4>
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Title
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Status
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Submission Date
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Actions
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {selectedScholar.progressReports.map((report) => (
                  <tr key={report.id} className="hover:bg-gray-50">
                    <td className="px-4 py-3 whitespace-nowrap">
                      <div className="font-medium text-gray-900">
                        {report.title}
                      </div>
                    </td>
                    <td className="px-4 py-3 whitespace-nowrap">
                      <span
                        className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                          report.status === "Approved"
                            ? "bg-green-100 text-green-800"
                            : report.status === "Pending Review"
                              ? "bg-yellow-100 text-yellow-800"
                              : "bg-gray-100 text-gray-800"
                        }`}
                      >
                        {report.status}
                      </span>
                    </td>
                    <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                      {report.date || "N/A"}
                    </td>
                    <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                      {report.status !== "Not Submitted" && (
                        <div className="flex space-x-2">
                          <button
                            className="text-blue-600 hover:text-blue-900"
                            onClick={() =>
                              handleOpenModal(
                                report.title,
                                report.document,
                                "progress",
                                report.id,
                                "view",
                              )
                            }
                          >
                            View
                          </button>
                          {report.status === "Pending Review" && (
                            <>
                              <button
                                className="text-green-600 hover:text-green-900"
                                onClick={() =>
                                  handleOpenModal(
                                    report.title,
                                    report.document,
                                    "progress",
                                    report.id,
                                    "approve",
                                  )
                                }
                              >
                                Approve
                              </button>
                              <button
                                className="text-red-600 hover:text-red-900"
                                onClick={() =>
                                  handleOpenModal(
                                    report.title,
                                    report.document,
                                    "progress",
                                    report.id,
                                    "disapprove",
                                  )
                                }
                              >
                                Disapprove
                              </button>
                            </>
                          )}
                        </div>
                      )}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <h4 className="text-md font-semibold text-gray-800 mb-3">
            Pre-submission and Final Thesis
          </h4>
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Title
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Status
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Submission Date
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Actions
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {selectedScholar.researchSubmissions
                  .filter(
                    (submission) =>
                      submission.id === "pts" || submission.id === "fts",
                  )
                  .map((submission) => (
                    <tr key={submission.id} className="hover:bg-gray-50">
                      <td className="px-4 py-3 whitespace-nowrap">
                        <div className="font-medium text-gray-900">
                          {submission.title}
                        </div>
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap">
                        <span
                          className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                            submission.status === "Approved"
                              ? "bg-green-100 text-green-800"
                              : submission.status === "Pending Review"
                                ? "bg-yellow-100 text-yellow-800"
                                : "bg-gray-100 text-gray-800"
                          }`}
                        >
                          {submission.status}
                        </span>
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                        {submission.date || "N/A"}
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                        {submission.status !== "Not Submitted" && (
                          <div className="flex space-x-2">
                            <button
                              className="text-blue-600 hover:text-blue-900"
                              onClick={() =>
                                handleOpenModal(
                                  submission.title,
                                  submission.document,
                                  "thesis",
                                  0,
                                  "view",
                                )
                              }
                            >
                              View
                            </button>
                            {submission.status === "Pending Review" && (
                              <>
                                <button
                                  className="text-green-600 hover:text-green-900"
                                  onClick={() =>
                                    handleOpenModal(
                                      submission.title,
                                      submission.document,
                                      "thesis",
                                      0,
                                      "approve",
                                    )
                                  }
                                >
                                  Approve
                                </button>
                                <button
                                  className="text-red-600 hover:text-red-900"
                                  onClick={() =>
                                    handleOpenModal(
                                      submission.title,
                                      submission.document,
                                      "thesis",
                                      0,
                                      "disapprove",
                                    )
                                  }
                                >
                                  Disapprove
                                </button>
                              </>
                            )}
                          </div>
                        )}
                      </td>
                    </tr>
                  ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    );

    const renderForms = () => (
      <div className="space-y-6">
        {/* Admission and Enrollment Documents */}
        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <h4 className="text-md font-semibold text-gray-800 mb-3">
            Admission and Enrollment Documents
          </h4>
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Title
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Status
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Submission Date
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Actions
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {selectedScholar.forms
                  .filter((form) => form.category === "Enrollment")
                  .map((form) => (
                    <tr key={form.id} className="hover:bg-gray-50">
                      <td className="px-4 py-3 whitespace-nowrap">
                        <div className="font-medium text-gray-900">
                          {form.title}
                        </div>
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap">
                        <span
                          className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                            form.status === "Approved"
                              ? "bg-green-100 text-green-800"
                              : form.status === "Pending Review"
                                ? "bg-yellow-100 text-yellow-800"
                                : "bg-gray-100 text-gray-800"
                          }`}
                        >
                          {form.status}
                        </span>
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                        {form.submittedDate || "N/A"}
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                        <div className="flex space-x-2">
                          <button
                            className="text-blue-600 hover:text-blue-900"
                            onClick={() =>
                              handleOpenModal(
                                form.title,
                                form.document,
                                "form",
                                form.id,
                                "view",
                              )
                            }
                          >
                            View
                          </button>
                          {form.status === "Pending Review" && (
                            <>
                              <button
                                className="text-green-600 hover:text-green-900"
                                onClick={() =>
                                  handleOpenModal(
                                    form.title,
                                    form.document,
                                    "form",
                                    form.id,
                                    "approve",
                                  )
                                }
                              >
                                Approve
                              </button>
                              <button
                                className="text-red-600 hover:text-red-900"
                                onClick={() =>
                                  handleOpenModal(
                                    form.title,
                                    form.document,
                                    "form",
                                    form.id,
                                    "disapprove",
                                  )
                                }
                              >
                                Disapprove
                              </button>
                            </>
                          )}
                        </div>
                      </td>
                    </tr>
                  ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* Supervisor and Committee Formation Documents */}
        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <h4 className="text-md font-semibold text-gray-800 mb-3">
            Supervisor and Committee Formation Documents
          </h4>
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Title
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Status
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Submission Date
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Actions
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {selectedScholar.forms
                  .filter((form) => form.category === "Committee")
                  .map((form) => (
                    <tr key={form.id} className="hover:bg-gray-50">
                      <td className="px-4 py-3 whitespace-nowrap">
                        <div className="font-medium text-gray-900">
                          {form.title}
                        </div>
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap">
                        <span
                          className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                            form.status === "Approved"
                              ? "bg-green-100 text-green-800"
                              : form.status === "Pending Review"
                                ? "bg-yellow-100 text-yellow-800"
                                : "bg-gray-100 text-gray-800"
                          }`}
                        >
                          {form.status}
                        </span>
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                        {form.submittedDate || "N/A"}
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                        <div className="flex space-x-2">
                          <button
                            className="text-blue-600 hover:text-blue-900"
                            onClick={() =>
                              handleOpenModal(
                                form.title,
                                form.document,
                                "form",
                                form.id,
                                "view",
                              )
                            }
                          >
                            View
                          </button>
                          {form.status === "Pending Review" && (
                            <>
                              <button
                                className="text-green-600 hover:text-green-900"
                                onClick={() =>
                                  handleOpenModal(
                                    form.title,
                                    form.document,
                                    "form",
                                    form.id,
                                    "approve",
                                  )
                                }
                              >
                                Approve
                              </button>
                              <button
                                className="text-red-600 hover:text-red-900"
                                onClick={() =>
                                  handleOpenModal(
                                    form.title,
                                    form.document,
                                    "form",
                                    form.id,
                                    "disapprove",
                                  )
                                }
                              >
                                Disapprove
                              </button>
                            </>
                          )}
                        </div>
                      </td>
                    </tr>
                  ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* Coursework and Registration Documents */}
        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <h4 className="text-md font-semibold text-gray-800 mb-3">
            Coursework and Registration Documents
          </h4>
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Title
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Status
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Submission Date
                  </th>
                  <th
                    scope="col"
                    className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                  >
                    Actions
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {selectedScholar.forms
                  .filter((form) => form.category === "Coursework")
                  .map((form) => (
                    <tr key={form.id} className="hover:bg-gray-50">
                      <td className="px-4 py-3 whitespace-nowrap">
                        <div className="font-medium text-gray-900">
                          {form.title}
                        </div>
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap">
                        <span
                          className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                            form.status === "Approved"
                              ? "bg-green-100 text-green-800"
                              : form.status === "Pending Review"
                                ? "bg-yellow-100 text-yellow-800"
                                : "bg-gray-100 text-gray-800"
                          }`}
                        >
                          {form.status}
                        </span>
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                        {form.submittedDate || "N/A"}
                      </td>
                      <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                        <div className="flex space-x-2">
                          <button
                            className="text-blue-600 hover:text-blue-900"
                            onClick={() =>
                              handleOpenModal(
                                form.title,
                                form.document,
                                "form",
                                form.id,
                                "view",
                              )
                            }
                          >
                            View
                          </button>
                          {form.status === "Pending Review" && (
                            <>
                              <button
                                className="text-green-600 hover:text-green-900"
                                onClick={() =>
                                  handleOpenModal(
                                    form.title,
                                    form.document,
                                    "form",
                                    form.id,
                                    "approve",
                                  )
                                }
                              >
                                Approve
                              </button>
                              <button
                                className="text-red-600 hover:text-red-900"
                                onClick={() =>
                                  handleOpenModal(
                                    form.title,
                                    form.document,
                                    "form",
                                    form.id,
                                    "disapprove",
                                  )
                                }
                              >
                                Disapprove
                              </button>
                            </>
                          )}
                        </div>
                      </td>
                    </tr>
                  ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    );

    return (
      <div className="bg-white rounded-xl shadow-lg p-6">
        <div className="flex justify-between items-center mb-4">
          <div className="flex items-center">
            <button
              onClick={handleBackToList}
              className="text-emerald-600 hover:text-emerald-900 mr-3"
            >
              ← Back to List
            </button>
            <h3 className="text-xl font-semibold text-gray-800">
              {selectedScholar.name}
            </h3>
          </div>
          <span
            className={`px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full ${
              selectedScholar.status.includes("Pending")
                ? "bg-yellow-100 text-yellow-800"
                : "bg-green-100 text-green-800"
            }`}
          >
            {selectedScholar.status}
          </span>
        </div>

        {renderTabs()}

        {activeTab === "overview" && renderOverview()}
        {activeTab === "submissions" && renderSubmissions()}
        {activeTab === "forms" && renderForms()}
      </div>
    );
  };

  // Render modal for actions
  const renderModal = () =>
    showModal && (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div className="bg-white rounded-xl shadow-xl p-6 max-w-2xl w-full max-h-full overflow-y-auto">
          <div className="flex justify-between items-center mb-4">
            <h3 className="text-lg font-semibold text-gray-800">
              {modalContent.action === "view"
                ? "View Document"
                : modalContent.action === "approve"
                  ? "Approve Document"
                  : "Disapprove Document"}
            </h3>
            <button
              onClick={handleCloseModal}
              className="text-gray-400 hover:text-gray-600"
            >
              <svg
                className="h-6 w-6"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </button>
          </div>

          <div className="mb-4">
            <p className="font-medium text-gray-800">{modalContent.title}</p>
            <p className="text-sm text-gray-500">
              Document: {modalContent.document}
            </p>
          </div>

          {modalContent.action !== "view" && (
            <div className="mb-4">
              <label
                htmlFor="remark"
                className="block text-sm font-medium text-gray-700 mb-1"
              >
                Add Remark
              </label>
              <textarea
                id="remark"
                value={remark}
                onChange={(e) => setRemark(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500"
                rows={4}
                placeholder="Add your comments or feedback here..."
              ></textarea>
            </div>
          )}

          <div className="flex justify-end space-x-3">
            <button
              onClick={handleCloseModal}
              className="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50"
            >
              Cancel
            </button>
            {modalContent.action !== "view" && (
              <button
                onClick={handleAction}
                className={`px-4 py-2 rounded-md text-white ${
                  modalContent.action === "approve"
                    ? "bg-emerald-600 hover:bg-emerald-700"
                    : "bg-red-600 hover:bg-red-700"
                }`}
              >
                {modalContent.action === "approve" ? "Approve" : "Disapprove"}
              </button>
            )}
          </div>
        </div>
      </div>
    );

  // Render footer
  const renderFooter = () => (
    <footer className="bg-gray-100 py-4 mt-8">
      <div className="container mx-auto px-4">
        <div className="flex flex-col sm:flex-row justify-between items-center">
          <p className="text-gray-600 text-sm mb-2 sm:mb-0">
            © 2025 JIS University. All Rights Reserved.
          </p>
          <div className="flex space-x-4">
            <a
              href="#"
              className="text-emerald-600 hover:text-emerald-800 text-sm"
            >
              Help Center
            </a>
            <a
              href="#"
              className="text-emerald-600 hover:text-emerald-800 text-sm"
            >
              Terms and Conditions
            </a>
            <a
              href="#"
              className="text-emerald-600 hover:text-emerald-800 text-sm"
            >
              Privacy Policy
            </a>
          </div>
        </div>
      </div>
    </footer>
  );

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white border-b border-gray-200 shadow-sm">
        <div className="container mx-auto px-4 py-4">
          <div className="flex justify-between items-center">
            <h1 className="text-2xl font-bold text-emerald-600">
              Supervisor Dashboard
            </h1>
            <div className="flex items-center space-x-4">
              <span className="text-gray-700">Dr. Rajesh Gupta</span>
              <button className="bg-emerald-100 text-emerald-800 p-2 rounded-full">
                <svg
                  className="h-5 w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth="2"
                    d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="container mx-auto px-4 py-6">
        {selectedScholar ? renderScholarDetails() : renderScholarTable()}
        <div className="mt-6">
          <DSCSubmissions scholars={mockScholars} />
        </div>
      </main>

      {/* Footer */}
      {renderFooter()}

      {/* Modal */}
      {renderModal()}
    </div>
  );
}

// push to dsc for evalution is not establish we can make a logic that if
// approved by the supervisor and co-supervisor then it will be pushed to dsc for evaluation automatically
