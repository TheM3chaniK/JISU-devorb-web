import { Request, Response } from "express";
import path from "path";
import { forms, progressReports } from "@/test-data/forms.js";
import { DocType } from "@/types/Document.js";

export const getAvailableDocuments = (req: Request, res: Response) => {
  const { docType } = req.query;
  if (docType === DocType.form) {
    return res.status(200).json({ forms });
  } else if (docType === DocType.progressReport) {
    return res.status(200).json({ progressReports });
  } else {
    return res.status(400).json({ message: "Invalid Doctype!" });
  }
};

export const downloadDocument = (req: Request, res: Response) => {
  const { docType, id } = req.params;

  console.log(id);
  if (docType === DocType.form) {
    const form = forms.find((f) => f.id === id);

    if (!form) {
      return res.status(404).json({ message: "Form not found" });
    }

    const baseURI = process.env.FORM_BASE_URI;
    if (!baseURI) return res.status(500);

    const filePath = path.join(baseURI, form.filename);

    res.download(filePath, form.filename, (err) => {
      if (err) {
        console.error("Error sending file:", err);
        res.status(500).send("Error downloading file");
      }
    });
  } else if (docType === DocType.progressReport) {
    const progressReport = progressReports.find(
      (report) => report.id === Number(id),
    );

    if (!progressReports || !progressReport?.filename) {
      return res.status(404).json({ message: "Progress Report Not found" });
    }

    const baseURI = process.env.PROGRESS_REPORT_BASE_URI;

    if (!baseURI) return res.status(500);

    const filePath = path.join(baseURI, progressReport.filename);
  } else {
    return res.status(400).json({ message: "Invalid Doctype" });
  }
};
